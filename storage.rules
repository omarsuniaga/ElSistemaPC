rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Función para verificar roles desde Firestore
    function hasRole(role) {
      return firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == role;
    }

    // Reglas para avatares de usuarios
    match /avatars/{userId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.uid == userId || 
        hasRole('Director') || 
        hasRole('Admin')
      );
    }

    // Reglas para avatares de maestros
    match /avatars/maestros/{maestroId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.uid == maestroId || 
        hasRole('Director') || 
        hasRole('Admin')
      );
    }

    // Reglas para avatares de estudiantes
    match /avatars/alumnos/{studentId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        hasRole('Director') || 
        hasRole('Admin') || 
        hasRole('Maestro')
      );
    }

    // Reglas para documentos de estudiantes
    match /documents/{studentId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        hasRole('Director') || 
        hasRole('Admin') ||
        hasRole('Maestro')
      );
    }

    // Reglas para documentos de maestros
    match /documents/maestros/{maestroId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.uid == maestroId || 
        hasRole('Director') || 
        hasRole('Admin')
      );
    }

    // Reglas para archivos de contenido
    match /content/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        hasRole('Director') || 
        hasRole('Maestro')
      );
    }

    // Regla por defecto - denegar todo lo demás
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
