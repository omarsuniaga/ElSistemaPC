// Script de prueba para verificar la correcci√≥n del flash de login
// Ejecutar en la consola del navegador despu√©s de iniciar sesi√≥n

console.log('üß™ Iniciando prueba de correcci√≥n del flash de login...');

// Funci√≥n para simular recarga de p√°gina
function testPageReload() {
  console.log('üîÑ Simulando recarga de p√°gina...');
  window.location.reload();
}

// Funci√≥n para simular navegaci√≥n con botones del navegador
function testBrowserNavigation() {
  console.log('üîô Simulando navegaci√≥n con botones del navegador...');

  // Ir a una p√°gina diferente
  window.history.pushState({}, '', '/dashboard');

  // Volver atr√°s
  setTimeout(() => {
    window.history.back();
  }, 1000);

  // Ir adelante
  setTimeout(() => {
    window.history.forward();
  }, 2000);
}

// Funci√≥n para verificar el estado de autenticaci√≥n
function checkAuthState() {
  console.log('üîê Verificando estado de autenticaci√≥n...');

  // Acceder al store de autenticaci√≥n desde Vue
  const app = document.querySelector('#app').__vue_app__;
  const authStore = app.config.globalProperties.$pinia.state.value.auth;

  console.log('‚úÖ Estado actual:', {
    isLoggedIn: authStore.isLoggedIn,
    isInitialized: authStore.isInitialized,
    user: authStore.user?.email || 'No user',
    role: authStore.user?.role || 'No role',
  });

  return authStore;
}

// Funci√≥n principal de prueba
function runLoginFlashTest() {
  console.log('üèÅ Ejecutando prueba completa...');

  // 1. Verificar estado inicial
  const authStore = checkAuthState();

  if (!authStore.isLoggedIn) {
    console.log('‚ùå Error: No hay usuario autenticado. Inicia sesi√≥n primero.');
    return;
  }

  console.log('‚úÖ Usuario autenticado. Continuando con las pruebas...');

  // 2. Test de recarga de p√°gina
  console.log('üìù Test 1: Recarga de p√°gina');
  console.log('   - Deber√≠as ver "Iniciando aplicaci√≥n..." brevemente');
  console.log('   - NO deber√≠as ver la vista de login');
  console.log('   - La p√°gina deber√≠a cargar directamente');

  // 3. Test de navegaci√≥n
  console.log('üìù Test 2: Navegaci√≥n con botones del navegador');
  console.log('   - Simula navegaci√≥n adelante/atr√°s');
  console.log('   - NO deber√≠a aparecer flash de login');

  // 4. Instrucciones manuales
  console.log('üìã Pruebas manuales adicionales:');
  console.log('   1. Presiona F5 para recargar la p√°gina');
  console.log('   2. Usa los botones ‚Üê ‚Üí del navegador');
  console.log('   3. Navega a diferentes secciones de la app');
  console.log('   4. Verifica que no aparece flash de login');

  return {
    testPageReload,
    testBrowserNavigation,
    checkAuthState,
  };
}

// Exponer funciones globalmente para pruebas manuales
window.testLoginFlash = runLoginFlashTest;
window.testPageReload = testPageReload;
window.testBrowserNavigation = testBrowserNavigation;
window.checkAuthState = checkAuthState;

// Ejecutar prueba autom√°ticamente
const testFunctions = runLoginFlashTest();

console.log('üéØ Funciones de prueba disponibles:');
console.log('   - window.testLoginFlash() - Ejecutar prueba completa');
console.log('   - window.testPageReload() - Simular recarga');
console.log('   - window.testBrowserNavigation() - Simular navegaci√≥n');
console.log('   - window.checkAuthState() - Verificar estado auth');

export { runLoginFlashTest as testLoginFlash, testPageReload, testBrowserNavigation, checkAuthState };
